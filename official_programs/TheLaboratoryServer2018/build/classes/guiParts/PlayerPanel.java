/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * PlayerPanel.java
 *
 * Created on 2018/04/28, 14:42:37
 */
package guiParts;

import java.awt.Color;
import java.awt.GridLayout;
import java.awt.Image;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;

/**
 *
 * @author ktajima
 */
public class PlayerPanel extends javax.swing.JPanel {
    public static Color[] BackGroundColor = {new Color(204,204,255),new Color(255,204,204)};
    public static File StartPlayerMakerImage = new File("images\\startplayer.png");

    private ImageIcon startPlayerIcon;
    private WorkerListPanel workerPanel;
    
    /** Creates new form PlayerPanel */
    public PlayerPanel(int playerID) {
        initComponents();
        
        try {
            BufferedImage image = ImageIO.read(StartPlayerMakerImage);
            Image smallImg = image.getScaledInstance((int) (image.getWidth() * 0.2), -1, Image.SCALE_SMOOTH);
            this.startPlayerIcon = new ImageIcon(smallImg);
        } catch (IOException ex) {
            Logger.getLogger(PlayerPanel.class.getName()).log(Level.SEVERE, null, ex);
        }

        
        if(playerID == 0){
            this.jLabel1.setText("Player 0");
            this.setBackground(BackGroundColor[0]);
            this.workerPanel = new WorkerListPanel(0);
            this.jLabel2.setIcon(startPlayerIcon);
        } else if(playerID == 1){
            this.jLabel1.setText("Player 1");
            this.setBackground(BackGroundColor[1]);
            this.workerPanel = new WorkerListPanel(1);
        }
        this.jLabel2.setText("接続を待っています。");
        
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();

        setPreferredSize(new java.awt.Dimension(200, 500));

        jLabel1.setText("jLabel1");

        jTextField1.setFont(new java.awt.Font("MS UI Gothic", 0, 30)); // NOI18N
        jTextField1.setText("jTextField1");

        jLabel2.setFont(new java.awt.Font("MS UI Gothic", 0, 18)); // NOI18N
        jLabel2.setText("jLabel2");

        jLabel3.setText("workers");

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 176, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 217, Short.MAX_VALUE)
        );

        jLabel4.setFont(new java.awt.Font("MS UI Gothic", 0, 48));
        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/coin.png"))); // NOI18N
        jLabel4.setText("0");

        jLabel5.setFont(new java.awt.Font("MS UI Gothic", 0, 48));
        jLabel5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/beaker.png"))); // NOI18N
        jLabel5.setText("0");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 168, Short.MAX_VALUE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 168, Short.MAX_VALUE))
                        .addGap(20, 20, 20))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 176, Short.MAX_VALUE)
                            .addComponent(jTextField1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 176, Short.MAX_VALUE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.LEADING))
                        .addContainerGap())))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel5)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTextField jTextField1;
    // End of variables declaration//GEN-END:variables

    public void setNameText(String playerNameOf) {
        this.jTextField1.setText(playerNameOf);
    }

    public void setMoney(int money) {
        this.jLabel4.setText(Integer.toString(money));
    }
    public void setReserchPoint(int point) {
        this.jLabel5.setText(Integer.toString(point));
    }

    void setUnusedWorkers(int stdCount, int astCount, int profCount) {
        this.jPanel1.removeAll();
        this.jPanel1.setLayout(new GridLayout(1,1));
        this.workerPanel.setCountOfStudent(stdCount);
        this.workerPanel.setCountOfAssistant(astCount);
        this.workerPanel.setCountOfAssistant(profCount);
        this.jPanel1.add(this.workerPanel);
    }

    void setStartPlayer(boolean b) {
        if(b){
            this.jLabel2.setIcon(startPlayerIcon);
        } else {
            this.jLabel2.setIcon(null);
        }
    }
    
    void setCurrentPlayer(boolean b){
        if(b){
            this.jLabel2.setText("思考中");
        } else {
            this.jLabel2.setText("相手の手を待っています");
        }
    }
}
